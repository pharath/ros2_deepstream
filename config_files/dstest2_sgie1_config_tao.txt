################################################################################
# Copyright (c) 2018-2020, NVIDIA CORPORATION. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
################################################################################

# Following properties are mandatory when engine files are not specified:
#   int8-calib-file(Only in INT8)
#   Caffemodel mandatory properties: model-file, proto-file, output-blob-names
#   UFF: uff-file, input-dims, uff-input-blob-name, output-blob-names
#   ONNX: onnx-file
#
# Mandatory properties for detectors:
#   num-detected-classes
#
# Optional properties for detectors:
#   cluster-mode(Default=Group Rectangles), interval(Primary mode only, Default=0)
#   custom-lib-path,
#   parse-bbox-func-name
#
# Mandatory properties for classifiers:
#   classifier-threshold, is-classifier
#
# Optional properties for classifiers:
#   classifier-async-mode(Secondary mode only, Default=false)
#
# Optional properties in secondary mode:
#   operate-on-gie-id(Default=0), operate-on-class-ids(Defaults to all classes),
#   input-object-min-width, input-object-min-height, input-object-max-width,
#   input-object-max-height
#
# Following properties are always recommended:
#   batch-size(Default=1)
#
# Other optional properties:
#   net-scale-factor(Default=1), network-mode(Default=0 i.e FP32),
#   model-color-format(Default=0 i.e. RGB) model-engine-file, labelfile-path,
#   mean-file, gie-unique-id(Default=0), offsets, process-mode (Default=1 i.e. primary),
#   custom-lib-path, network-mode(Default=0 i.e FP32)
#
# The values in the config file are overridden by values set through GObject
# properties.

[property]
gpu-id=0
## preprocessing parameters: These are the same for all classification models generated by TLT.
## Pixel normalization factor. The plugin multiplies mean values by net-scale-factor.
net-scale-factor=1.0
## Array of mean values of color components to be subtracted from each pixel.
offsets=123.67;116.28;103.53
model-color-format=1
batch-size=32
labelfile-path=signs.sgie_classes_etlt.txt
model-engine-file=final_model.etlt_b32_gpu0_fp16.engine
tlt-encoded-model=final_model.etlt
tlt-model-key=OWNoZGgxOWMzNGRxZ3JtZnZoZmVwaWI5aWY6ODhjY2ZiM2EtZDRmNC00YmNmLWE4YTUtNzViOWNkZWVlMGI0
force-implicit-batch-dim=1
maintain-aspect-ratio=1
## c = number of channels, h = height of the model input, w = width of model input
infer-dims=3;112;112
## 0: NCHW 1: NHWC 2: NC
uff-input-order=0
uff-input-blob-name=input_1
## 0=FP32, 1=INT8, 2=FP16 mode
network-mode=2
num-detected-classes=43
interval=0
gie-unique-id=22
operate-on-gie-id=1
## 0: Detector, 1: Classifier, 2: Segmentation, 3: Instance Segmentation
network-type=1
output-blob-names=predictions/Softmax
classifier-async-mode=1
classifier-threshold=0.51
## process-mode: 2 - inferences on crops from primary detector, 1 - inferences on whole frame
process-mode=2
#scaling-filter=0
#scaling-compute-hw=0
